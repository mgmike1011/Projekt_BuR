(*Temperature setpoints to all zones.*)
VAR
	SetTemp1 : REAL := 30;
	SetTemp2 : REAL := 30;
	SetTemp3 : REAL := 30;
	SetTemp4 : REAL := 30;
END_VAR
(*Temperature tuning setpoints to all zones.*)
VAR
	SetTempHeatTuning1 : REAL := 100;
	SetTempHeatTuning2 : REAL := 100;
	SetTempHeatTuning3 : REAL := 100;
	SetTempHeatTuning4 : REAL := 100;
	SetTempCoolTuning1 : REAL := 30;
	SetTempCoolTuning2 : REAL := 30;
	SetTempCoolTuning3 : REAL := 30;
	SetTempCoolTuning4 : REAL := 30;
END_VAR
(*Machine status - step.*)
VAR
	STATUS : MACHINE_WORKING_STATE := STATE_IDLE; (*Whole machine working status *)
END_VAR
(*Zones status*)
VAR
	ZoneStatus : ARRAY[0..ELEMENTS_NUMBER] OF ZONE_WORKING_STATE;
END_VAR
(*Temperature controller functionblocks.*)
VAR
	TempControllerPar : ARRAY[0..ELEMENTS_NUMBER] OF MpTempControllerParType; (*Array of 4 additions to controllers*)
	TempController : ARRAY[0..ELEMENTS_NUMBER] OF MpTempController; (*Array of 4 controllers - one for each zone*)
	TempGroup : MpTempGroup; (*Controller group*)
	TempGroupPar : MpTempGroupParType; (*Adition to controllergroup*)
END_VAR
(*Const elements.*)
VAR CONSTANT
	ELEMENTS_NUMBER : USINT := 3; (*Numbers of controling zones - 4 (0,1,2,3)*)
END_VAR
(*Machine working type*)
VAR
	Automatic_work : BOOL := FALSE;
	Manual_work : BOOL := FALSE;
	TuneEnable : BOOL := FALSE;
END_VAR
(*Manual control*)
VAR
	EnableZone1 : BOOL := TRUE;
	EnableZone2 : BOOL := TRUE;
	EnableZone3 : BOOL := TRUE;
	EnableZone4 : BOOL := TRUE;
END_VAR
(*Automatic control*)
VAR
	AutoStep : AUTOMATIC_MODE_STATE := STEP_INIT;
	TimeStep1 : TIME := T#5s; (*Min time of step 1*)
	TimeStep2 : TIME := T#5s; (*Min time of step 2*)
	TimeStep3 : TIME := T#5s; (*Min time of step 3*)
	TimeStep4 : TIME := T#5s; (*Min time of step 4*)
	TimeStep5 : TIME := T#5s; (*Min time of step 5*)
	TimStep1 : TON;
	TimStep2 : TON;
	TimStep3 : TON;
	TimStep4 : TON;
	TimStep5 : TON;
	CycleNumber : DINT := 0;
END_VAR
(*Simulation mode*)
VAR
	SimulateZone1Enable : BOOL := FALSE;
	SimulateZone2Enable : BOOL := FALSE;
	SimulateZone3Enable : BOOL := FALSE;
	SimulateZone4Enable : BOOL := FALSE;
END_VAR
(*Tuning parameters HEAT*)
VAR RETAIN
	PIDProportionaGainHEAT : ARRAY[0..ELEMENTS_NUMBER] OF REAL := [49.3,45.56,31.29,35.25];
	PIDIntegrationTimeHEAT : ARRAY[0..ELEMENTS_NUMBER] OF REAL := [64.92,75.59,95.21,101.41];
	PIDFilterTimeHEAT : ARRAY[0..ELEMENTS_NUMBER] OF REAL := [0.682,0.762,0.99,1.06];
	PIDDerivativeTimeHEAT : ARRAY[0..ELEMENTS_NUMBER] OF REAL := [6.82,7.62,9.99,10.64];
END_VAR
(*Tuning parameters COOL*)
VAR RETAIN
	PIDProportionaGainCOOL : ARRAY[0..ELEMENTS_NUMBER] OF REAL := [20.96,27.64,18.07,26.18];
	PIDIntegrationTimeCOOL : ARRAY[0..ELEMENTS_NUMBER] OF REAL := [68.71,46.86,80.30,51.64];
	PIDFilterTimeCOOL : ARRAY[0..ELEMENTS_NUMBER] OF REAL := [0.72,0.49,0.84,0.54];
	PIDDerivativeTimeCOOL : ARRAY[0..ELEMENTS_NUMBER] OF REAL := [7.22,4.92,8.43,5.42];
END_VAR
(* ########## MQTT communication variables ########### *)
(*PWM % Heater Zone 1  ->  TempController[0].HeatValue*)
(*PWM % Heater Zone 2  ->  TempController[1].HeatValue*)
(*PWM % Heater Zone 3  ->  TempController[2].HeatValue*)
(*PWM % Heater Zone 4  ->  TempController[3].HeatValue*)
(*PWM % FAN Zone 1  ->  TempController[0].CoolValue*)
(*PWM % FAN Zone 2  ->  TempController[1].CoolValue*)
(*PWM % FAN Zone 3  ->  TempController[2].CoolValue*)
(*PWM % FAN Zone 4  ->  TempController[3].CoolValue*)
(*Set Temperature Zone 1  ->  SetTemp1*)
(*Set Temperature Zone 2  ->  SetTemp2*)
(*Set Temperature Zone 3  ->  SetTemp3*)
(*Set Temperature Zone 4  ->  SetTemp4*)
(*Actual Temperature Zone 1  ->  gTemp1*)
(*Actual Temperature Zone 2  ->  gTemp2*)
(*Actual Temperature Zone 3  ->  gTemp3*)
(*Actual Temperature Zone 4  ->  gTemp4*)
(*Status dzialania calej maszyny -> STATUS (typ: MACHINE_WORKING_STATE)*)
(*Status dzialania trybu automatycznego -> AutoStep (typ: AUTOMATIC_MODE_STATUS)*)
(*Status dzialania strefy 1 -> ZoneStatus[0] (typ: ZONE_WORKING_STATUS)*)
(*Status dzialania strefy 2 -> ZoneStatus[1] (typ: ZONE_WORKING_STATUS)*)
(*Status dzialania strefy 3 -> ZoneStatus[2] (typ: ZONE_WORKING_STATUS)*)
(*Status dzialania strefy 4 -> ZoneStatus[3] (typ: ZONE_WORKING_STATUS)*)
(*Ilosc wykonanych cykli w trybie automatycznym -> CycleNumber*)
